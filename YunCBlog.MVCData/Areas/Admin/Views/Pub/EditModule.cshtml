@model YunCBlog.MVCData.Areas.Admin.Models.PubViewModels.PubModuleViewModel

@{
    ViewBag.Title = "EditModule";
    Layout = "~/Areas/Admin/Views/Shared/_AdminLayout.cshtml";
}



<div class="layui-fluid">
    <div class="layui-row">

        @using (Html.BeginForm("EditModule", "Pub", FormMethod.Post, new { @class = "layui-form" }))
        {
            @Html.AntiForgeryToken()
            @Html.ValidationSummary(true, "", new { @class = "layui-form-label" })


            <div class="layui-form-item">
                @Html.LabelFor(model => model.ModuleId, htmlAttributes: new { @class = "layui-form-label" })
                <div class="layui-input-inline">
                    @Html.EditorFor(model => model.ModuleId, new { htmlAttributes = new { @class = "layui-input" } })
                </div>
                <div class="layui-form-mid layui-word-aux">
                    @Html.ValidationMessageFor(model => model.ModuleId, "", new { @class = "x-red" })
                </div>
            </div>
            <div class="layui-form-item">
                @Html.LabelFor(model => model.ModuleName, htmlAttributes: new { @class = "layui-form-label" })
                <div class="layui-input-inline">
                    @Html.EditorFor(model => model.ModuleName, new { htmlAttributes = new { @class = "layui-input" } })
                </div>
                <div class="layui-form-mid layui-word-aux">
                    @Html.ValidationMessageFor(model => model.ModuleName, "", new { @class = "x-red" })
                </div>
            </div>
            <div class="layui-form-item">
                @Html.LabelFor(model => model.Url, htmlAttributes: new { @class = "layui-form-label" })
                <div class="layui-input-inline">
                    @Html.EditorFor(model => model.Url, new { htmlAttributes = new { @class = "layui-input" } })
                </div>
                <div class="layui-form-mid layui-word-aux">
                    @Html.ValidationMessageFor(model => model.Url, "", new { @class = "x-red" })
                </div>
            </div>
            <div class="layui-form-item">
                @Html.LabelFor(model => model.Memo, htmlAttributes: new { @class = "layui-form-label" })
                <div class="layui-input-inline">
                    @Html.EditorFor(model => model.Memo, new { htmlAttributes = new { @class = "layui-input" } })
                </div>
                <div class="layui-form-mid layui-word-aux">
                    @Html.ValidationMessageFor(model => model.Memo, "", new { @class = "x-red" })
                </div>
            </div>

            <div class="layui-form-item">
                @Html.LabelFor(model => model.ModuleCode, htmlAttributes: new { @class = "layui-form-label" })
                <div class="layui-input-inline">
                    @Html.EditorFor(model => model.ModuleCode, new { htmlAttributes = new { @class = "layui-input" } })
                </div>
                <div class="layui-form-mid layui-word-aux">
                    @Html.ValidationMessageFor(model => model.ModuleCode, "", new { @class = "x-red" })
                </div>
            </div>
            <div class="layui-form-item">
                <label for="L_repass" class="layui-form-label">
                </label>
                <button class="layui-btn" lay-filter="add" lay-submit="">
                    修改
                </button>
            </div>

        }


    </div>
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
