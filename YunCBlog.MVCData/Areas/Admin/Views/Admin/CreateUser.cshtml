@model YunCBlog.MVCData.Areas.Admin.Models.UserViewModels.CreateUserViewModel
@{
    Layout = null;
    ViewBag.title = "创建账户";
}

<!DOCTYPE html>
<html>
<head>
    <meta name="viewport" content="width=device-width" />
    <title>@ViewBag.title</title>
    @Styles.Render("~/AdminLogin/css")
    @Scripts.Render("~/adminjs/loginjs")
</head>
<body class="login-bg">
    <div class="login layui-anim">
        <div class="message">@ViewBag.title</div>
        <div id="darkbannerwrap"></div>

        @using (Html.BeginForm("CreateUser", "Admin", FormMethod.Post, new { @class = "layui-form" }))
        {
            @Html.AntiForgeryToken()
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })

            <div class="layui-form-item">
                @Html.LabelFor(model => model.SiteName, htmlAttributes: new { @class = "layui-form-label"  })
                <div class="layui-input-inline">
                    @Html.EditorFor(model => model.SiteName, new { htmlAttributes = new { @class = "layui-input",@autocomplete="off" } })
                    @Html.ValidationMessageFor(model => model.SiteName, "", new { @class = "x-red" })
                </div>
            </div>
            <div class="layui-form-item">
                @Html.LabelFor(model => model.UserName, htmlAttributes: new { @class = "layui-form-label" })
                <div class="layui-input-inline">
                    @Html.EditorFor(model => model.UserName, new { htmlAttributes = new { @class = "layui-input" ,@autocomplete="off"} })
                    @Html.ValidationMessageFor(model => model.UserName, "", new { @class = "x-red" })
                </div>
                @*<div class="layui-form-mid layui-word-aux">
                    <span class="x-red">*</span>将会成为您唯一的登入名
                </div>*@
            </div>
            <div class="layui-form-item">
                @Html.LabelFor(model => model.Email, htmlAttributes: new { @class = "layui-form-label" })
                <div class="layui-input-inline">
                    @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "layui-input" ,@autocomplete="off"} })
                    @Html.ValidationMessageFor(model => model.Email, "", new { @class = "x-red" })
                </div>
            </div>
            <div class="layui-form-item">
                @Html.LabelFor(model => model.PassWord, htmlAttributes: new { @class = "layui-form-label" })
                <div class="layui-input-inline">
                    @Html.EditorFor(model => model.PassWord, new { htmlAttributes = new { @class = "form-control layui-input" } })
                    @Html.ValidationMessageFor(model => model.PassWord, "", new { @class = "x-red" })
                </div>
            </div>
            <div class="layui-form-item">
                <label for="L_repass" class="layui-form-label">
                </label>
                <button class="layui-btn" lay-filter="add" lay-submit="">
                    增加
                </button>
            </div>
        }
    </div>
</body>
</html>
