@model YunCBlog.MVCData.Areas.Admin.Models.ArticleViewModels.ArticleModuleViewModel

@{
    ViewBag.Title = "CreateArticleModule";
    //Layout = "~/Areas/Admin/Views/Shared/_AdminLayout.cshtml";
    Layout = null;
}
@Styles.Render("~/Admin/css")
@Scripts.Render("~/admin/layui")
@Scripts.Render("~/admin/js")

<div class="layui-fluid">
    <div class="layui-row">

        @using (Html.BeginForm("CreateArticleModule", "Article", FormMethod.Post, new { @class = "layui-form" }))
        {
            @Html.AntiForgeryToken()
            @Html.ValidationSummary(true, "", new { @class = "layui-form-label" })


            <div class="layui-form-item">
                @Html.LabelFor(model => model.ArticleModuleName, htmlAttributes: new { @class = "layui-form-label" })
                <div class="layui-input-inline">
                    @Html.EditorFor(model => model.ArticleModuleName, new { htmlAttributes = new { @class = "layui-input" } })
                </div>
                <div class="layui-form-mid layui-word-aux">
                    @Html.ValidationMessageFor(model => model.ArticleModuleName, "", new { @class = "x-red" })
                </div>
            </div>
            <div class="layui-form-item">
                @Html.LabelFor(model => model.Url, htmlAttributes: new { @class = "layui-form-label" })
                <div class="layui-input-inline">
                    @Html.EditorFor(model => model.Url, new { htmlAttributes = new { @class = "layui-input" } })
                </div>
                <div class="layui-form-mid layui-word-aux">
                    @Html.ValidationMessageFor(model => model.Url, "", new { @class = "x-red" })
                </div>
            </div>
            <div class="layui-form-item">
                @Html.LabelFor(model => model.ParentModuleId, htmlAttributes: new { @class = "layui-form-label" })
                <div class="layui-input-inline">
                    @Html.EditorFor(model => model.ParentModuleId, new { htmlAttributes = new { @class = "layui-input" } })
                </div>
                <div class="layui-form-mid layui-word-aux">
                    @Html.ValidationMessageFor(model => model.ParentModuleId, "", new { @class = "x-red" })
                </div>
            </div>
            <div class="layui-form-item">
                @Html.LabelFor(model => model.ArticleTypeId, htmlAttributes: new { @class = "layui-form-label" })
                <div class="layui-input-inline">
                    @Html.EditorFor(model => model.ArticleTypeId, new { htmlAttributes = new { @class = "layui-input" } })
                </div>
                <div class="layui-form-mid layui-word-aux">
                    @Html.ValidationMessageFor(model => model.ArticleTypeId, "", new { @class = "x-red" })
                </div>
            </div>

            <div class="layui-form-item">
                @Html.LabelFor(model => model.DisOrder, htmlAttributes: new { @class = "layui-form-label" })
                <div class="layui-input-inline">
                    @Html.EditorFor(model => model.DisOrder, new { htmlAttributes = new { @class = "layui-input" } })
                </div>
                <div class="layui-form-mid layui-word-aux">
                    @Html.ValidationMessageFor(model => model.DisOrder, "", new { @class = "x-red" })
                </div>
            </div>
            <div class="layui-form-item">
                @Html.LabelFor(model => model.IsRemoved, htmlAttributes: new { @class = "layui-form-label" })
                <div class="layui-input-inline">
                    @Html.EditorFor(model => model.IsRemoved, new { htmlAttributes = new { @class = "layui-input" } })
                </div>
                <div class="layui-form-mid layui-word-aux">
                    @Html.ValidationMessageFor(model => model.IsRemoved, "", new { @class = "x-red" })
                </div>
            </div>
            <div class="layui-form-item">
                <label for="L_repass" class="layui-form-label">
                </label>
                <button class="layui-btn" lay-filter="add" lay-submit="">
                    增加
                </button>
            </div>

        }


    </div>
</div>